name: ci

on:
  workflow_dispatch:
  pull_request:

jobs:
  test_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        ros_distribution:
          - foxy
          - humble
    steps:
      - uses: actions/checkout@v2
  
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.6
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}

      #- name: Install additional ROS dependencies
      #  shell: cmd
      #  run: |
      #    call c:/dev/${{ matrix.ros_distribution }}/ros2-windows/setup.bat
      #    rosdep update
      #    rosdep install -i -y --from-paths src/Rcl.NET.Tests

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Build
        working-directory: src/Rcl.NET.Tests
        run: |
          dotnet nuget locals all --clear
          dotnet build -c Release --no-restore

      - name: Test (fastrtps)
        shell: cmd
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_fastrtps_cpp
        run: |
          call c:/dev/${{ matrix.ros_distribution }}/ros2-windows/setup.bat
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false

      - name: Test (cyclonedds)
        shell: cmd
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        run: |
          call c:/dev/${{ matrix.ros_distribution }}/ros2-windows/setup.bat
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false

  test_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        ros_distribution:
          - foxy
          - humble
    steps:
      - uses: actions/checkout@v2
  
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.6
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}

      - name: Install additional ROS dependencies
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          rosdep update
          rosdep install -i -y --from-paths src/Rcl.NET.Tests

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Build
        working-directory: src/Rcl.NET.Tests
        run: |
          dotnet nuget locals all --clear
          dotnet build -c Release --no-restore

      - name: Test (fastrtps)
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_fastrtps_cpp
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false

      - name: Test (cyclonedds)
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false

  test_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distribution:
          - foxy
          - humble

        include:
          - docker_image: ubuntu:focal
            ros_distribution: foxy
            ros_version: 2

          - docker_image: ubuntu:jammy
            ros_distribution: humble
            ros_version: 2
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - uses: actions/checkout@v2
  
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.6
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}

      - name: Install additional ROS dependencies
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          rosdep update
          rosdep install -i -y --from-paths src/Rcl.NET.Tests

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x

      - name: Build
        working-directory: src/Rcl.NET.Tests
        run: |
          dotnet nuget locals all --clear
          dotnet build -c Release --no-restore      
      
      - name: Test (fastrtps)
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_fastrtps_cpp
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false

      - name: Test (cyclonedds)
        working-directory: src/Rcl.NET.Tests
        env:
          RMW_IMPLEMENTATION: rmw_cyclonedds_cpp
        run: |
          . /opt/ros/${{ matrix.ros_distribution }}/setup.sh
          dotnet test -c Release --no-build --verbosity normal -p:ParallelizeTestCollections=false